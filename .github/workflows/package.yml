name: release

on:
  push:
    tags: ["release-*"]

env:
  BUILD_TYPE: Release

jobs:
  package:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: debian:11
            jpeg: libjpeg62-turbo
          - os: debian:sid
            jpeg: libjpeg62-turbo
          - os: ubuntu:18.04
            jpeg: libjpeg62
          - os: ubuntu:20.04
            jpeg: libjpeg62
          - os: ubuntu:22.04
            jpeg: libjpeg62
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: build package
      run: |
        DOCKER_BUILDKIT=1 \
        docker build \
          --build-arg BASE=${{ matrix.os }} \
          --build-arg JPEG=${{ matrix.jpeg }} \
          --build-arg REF_NAME=${{ github.ref_name }} \
          -f .github/workflows/Dockerfile \
          --output type=local,dest=. \
          .; \
        echo "package=$(ls *.deb)" >> "$GITHUB_ENV"
    - name: archive package
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.package }}
        path: ${{ env.package }}
        if-no-files-found: error

  release:
    needs:
      - package
    runs-on: ubuntu-latest

    steps:
    - name: Compute Version
      run: |
        SEMVER="${{ github.ref_name }}"
        SEMVER="${SEMVER#release-}"
        echo "semver=$SEMVER" >> "$GITHUB_ENV"

    - name: Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ env.semver }}
        release_name: pekwm-${{ env.semver }}
        draft: true
        prerelease: false

    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  upload:
    needs: release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        name:
          - debian11
          - debiansid
          - ubuntu1804
          - ubuntu2004
          - ubuntu2204

    steps:
    - name: Compute Version
      run: |
        SEMVER="${{ github.ref_name }}"
        SEMVER="${SEMVER#release-}"
        echo "semver=$SEMVER" >> "$GITHUB_ENV"

    - name: get package from archive
      uses: actions/download-artifact@v4.1.7
      with:
        name: pekwm_${{ env.semver }}~${{ matrix.name }}_amd64.deb

    - name: Upload
      id: upload-release-asset-linux64
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: pekwm_${{ env.semver }}~${{ matrix.name }}_amd64.deb
        asset_name: pekwm_${{ env.semver }}~${{ matrix.name }}_amd64.deb
        asset_content_type: application/octet-stream
